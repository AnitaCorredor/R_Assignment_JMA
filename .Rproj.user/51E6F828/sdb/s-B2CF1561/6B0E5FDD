{
    "collab_server" : "",
    "contents" : "print(fang_et_al_genotypes.txt)\nhead -n 5\nls\nsnp_position <- read.csv(file = \"snp_position.txt\")\nfang_et_al_genotypes <- read.csv(file = \"fang_etal_genotypes.txt\")\nfang_et_al_genotypes <- read.csv(file = \"fang_et_al_genotypes.txt\")\nsnp_position\nView(fang_et_al_genotypes)\nhead -n 5 snp_position\nView(fang_et_al_genotypes)\nView(snp_position)\nt(fang_et_al_genotypes)\nis.list(snp_position)\nis.list(fang_et_al_genotypes)\nstr(snp_position)\nstr(fang_et_al_genotypes)\nView(fang_et_al_genotypes)\nTeosinte_genotypes <- fang_et_al_genotypes[c(\"ZMPBA\", \"ZMPIL\" ,  \"ZMPJA\")]\nif (!require(\"dplyr\")) install.packages(\"dplyr\") # install dplyr if it's not already installed\nlibrary(dplyr)\nc(\"Ssmdn\")%in%c(\"One thing\",\"Ssmdn\")\nd$Theo <- d$species%in%c(species1, )\nd <- read.csv(fang_et_al_genotypes)\nd <- read.csv(file=\"fang_et_al_genotypes\")\ngetwd\ngetwd()\nd <- read.csv(file=\"fang_et_al_genotypes.txt\")\nd <- read.table(file=\"fang_et_al_genotypes.txt\")\n?read.table\nd <- read.table(file=\"fang_et_al_genotypes.txt\", header=TRUE, na.strings = \"?\")\nView(d)\nsnp <- read.table(file=\"snp_position.txt\", header=TRUE, na.strings = \"?\")\nsnp <- read.table(file=\"snp_position.txt\", header=TRUE)\nsnp <- read.csv(file=\"snp_position.txt\", header=TRUE)\nView(snp)\nsnp <- read.csv(file=\"snps.csv\", header=TRUE)\n#tab delimiter can be tricky because you may also have spaces which look like tab but are not recognized as it. Solution: replace all spaces/tabs with commas\nsnp <- read.table(file=\"snp_position.txt\", sep = \"tab\", header=TRUE)\nsnp <- read.table(file=\"snp_position.txt\", sep = \"\\t\", header=TRUE)\nView(d)\nd$Group == \"TRIPS\"\ngtype <- read.table(file=\"fang_et_al_genotypes.txt\", header=TRUE, stringAsFactors=FALSE, na.strings = '?/?')\ngtype <- read.table(file=\"fang_et_al_genotypes.txt\", header=TRUE, stringAsFactors=FALSE, na.strings = \"?\\/?\")\ngtype <- read.table(file=\"fang_et_al_genotypes.txt\", header=TRUE, stringAsFactors=FALSE, na.strings = \"?/?\")\ngtype <- read.table(file=\"fang_et_al_genotypes.txt\", header=TRUE, stringAsFactors=FALSE)\ngtype <- read.table(file=\"fang_et_al_genotypes.txt\", header=TRUE, stringsAsFactors = FALSE)\ngtype <- read.table(file=\"fang_et_al_genotypes.txt\", header=TRUE, stringsAsFactors = FALSE, na.strings = \"?/?\")\nView gtype\nView(gtype)\nd$Group == \"TRIPS\"\ngtype$Group == \"TRIPS\"\ngtype[gtype$Group,\"Sample_ID\"]\ngtype[gtype$Group==\"TRIPS\",\"Sample_ID\"]\ngtype[gtype$Group==\"TRIPS\",]\ntable(gtype$Group)\nwrite.csv(gtype[gtype$Group==\"ZMMLR\",],file = ZMMLR)\nwrite.csv(gtype[gtype$Group==\"ZMMLR\",],file = \"testgroup.csv\")\ntable(gtype$Group)\nwrite.csv(gtype[gtype$Group==\"ZMXNT\",],file = \"testgroup.csv\")\nd.split <- split(gtype,\"d$Group\")\nstr(d.spslit)\nstr(d.split)\nsavehistory(\"C:/Users/owner/Desktop/BCB_546X/R_Assignment_JMA/R_Assignment_JMA/R_HISTORY_DENNISHELP.Rhistory\")\nmtfs <- read.delim(\"https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/motif_recombrates.txt\", header=TRUE)\nrpts <- read.delim(\"https://raw.githubusercontent.com/vsbuffalo/bds-files/master/chapter-08-r/motif_repeats.txt\", header=TRUE)\nmtfs$pos <- paste(mtfs$chr, mtfs$motif_start, sep=\"-\")\nrpts$pos <- paste(rpts$chr, rpts$motif_start, sep=\"-\")\nmtfs$repeat_name <- rpts$name[match(mtfs$pos, rpts$pos)]\np <- ggplot(mtfs, aes(x=dist, y=recom)) + geom_point(size=1)\np <- p + geom_smooth(method=\"loess\", se=FALSE, span=1/10)\nprint(p)\nif (!require(\"ggplot2\")) install.packages(\"ggplot2\")\np <- ggplot(mtfs, aes(x=dist, y=recom)) + geom_point(size=1)\np <- p + geom_smooth(method=\"loess\", se=FALSE, span=1/10)\nprint(p)\n?(unique)\n?unique\np <- p + facet_wrap( ~ chr)\nprint(p)\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nif\nyou\nif (x == some_value){do stuff}\nx <- rpois(1, lambda=8)\nif (x >= 10) {\nprint(\"x is greater than or equal to 10\")\n}\nx\nfor(i in 1:10){\nprint(i)\n}\nfor(i in 1:1000000000){\nprint(i)\n}\nfor(i in 1:100){\nprint(i)\n}\nz <- 1\nwhile(z > 0.1){\nz <- runif(1)\nprint(z)\n}\n?runif\nz <- 1\nwhile(z > 0.1){\nz <- runif(1)\nprint(z)\n}\nx <-c(-3,1,-5,2)\nifelse(x < 0, -1, 1)\nx <-c(-3,1,-5,2)\nifelse(x < 0, -1, 1)\nx = 1:10\nx\nx <- [x]^2\nx <- x + [x]^2\nx <- x^2\nx\n?library\ninstall.packages(library)\nsnp_maize_\"?\" <- read.table(file=\"snp_maize.csv\", header=TRUE, stringsAsFactors = FALSE, ? = na.strings)\nsnp_maize <- read.table(file=\"snp_maize.csv\", header=TRUE, stringsAsFactors = FALSE, ? = na.strings)\nsnp_maize <- read.table(file=\"snp_maize.csv\", header=TRUE, stringsAsFactors = FALSE, ? = NA)\nsnp_maize <- read.table(file=\"snp_maize.csv\", header=TRUE, stringsAsFactors = FALSE, ? == NA)\nsnp_maize <- read.table(file=\"snp_maize.csv\", header=TRUE, stringsAsFactors = FALSE, \"?\" = \"NA\")\nsnp_maize <- read.table(file=\"snp_maize.csv\", header=TRUE, stringsAsFactors = FALSE)\nsetwd(maize_genotypes)\nsnp_maize <- read.table(file=\"snp_maize.csv\", header=TRUE, stringsAsFactors = FALSE)\nsnp_maize <- read.table(file=\"snp_maize.csv\", header=TRUE, stringsAsFactors = FALSE, sep = \",\")\nView(snp_maize)\nsnp_maize[1] <- NULL\nView(snp_maize)\nsnp_teosinte <- read.table(file=\"snp_teosinte.csv\", header=TRUE, stringsAsFactors = FALSE, sep = \",\")\nView(snp_teosinte)\nsnp_teosinte[1] <- NULL\nsnp_teosinte[2] <- NULL\nsnp_teosinte[3] <- NULL\nsnp_teosinte[5:15] <- NULL\nView(snp_teosinte)\nrm(snp_teosinte)\nsnp_teosinte <- read.table(file=\"snp_teosinte.csv\", header=TRUE, stringsAsFactors = FALSE, sep = \",\")\nsnp_teosinte[1] <- NULL\nView(snp_teosinte)\nsnp_teosinte[2] <- NULL\nView(snp_teosinte)\nsnp_teosinte[4:11] <- NULL\nView(snp_teosinte)\nsnp_teosinte[4] <- NULL\nsnp_teosinte[5:6] <- NULL\nView(snp_teosinte)\nsnp_teosinte[4] <- NULL\nView(snp_position)\nView(snp_teosinte)\nView(snp_maize)\nsnp_maize[5:15] <- NULL\nView(snp_maize)\nsnp_maize[2] <- NULL\nwrite.csv(snp_teosinte,file = \"cutcolumns_snp_teosinte.csv\")\nView(snp)\nView(snp_maize)\nView(snp_maize)\nView(snp_teosinte)\nwrite.csv(snp_maize,file = \"cutcolumns_snp_maize.csv\")\nsavehistory(\"C:/Users/owner/Desktop/BCB_546X/R_Assignment_JMA/R_Assignment_JMA/Rhistory10-11.Rhistory\")\n",
    "created" : 1508094021009.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "454365647",
    "id" : "6B0E5FDD",
    "lastKnownWriteTime" : 1507776485,
    "last_content_update" : 1508095204217,
    "path" : "C:/Users/owner/Desktop/BCB_546X/R_Assignment_JMA/R_Assignment_JMA/Not Used now/Rhistory10-11.Rhistory",
    "project_path" : "Not Used now/Rhistory10-11.Rhistory",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_history"
}